软件设计方法有哪些
自下而上：领域驱动

自上而下：数据驱动


什么是驱动模型===》软件工程中的软件建模或则叫软件设计方法

1: 驱动模型和设计模式的区别

设计模式是是技术层面的思考

驱动模型则是业务层面的思考


2： 常见的软件设计方法
领域驱动，模型驱动，数据驱动，属性驱动


【首先以下驱动架构都是基于mvc,否则哪里的M模型概念】
3：【领域模型model与驱动无关】分为2种:失血模型和充血模型


4：领域驱动是基于充血模型开发的


5：数据驱动是失血模型模式

解释：在习惯了传统的数据驱动开发模式后，View、Service、dao这种三层分层模式，
开发者会很自然的写出过程式代码，这种开发方式中的对象只是数据载体，而没有行为，
是一种贫血对象模型。以数据为中心，以数据库ER图为设计驱动，分层架构在这种开发模式下可以认为是数据处理和实现的过程
数据驱动模式业务逻辑都是写在Service中的，定义的实体模型充其量只是个数据载体，没有任何行为。
简单的业务系统采用这种贫血模型和过程化设计是没有问题的，但在业务逻辑复杂了，业务逻辑、状态会散落到在大量方法中，
原本的代码意图会渐渐不明确，我们将这种情况称为由贫血症引起的失忆症




6：基于贫血模型的MVC三层架构： 很多业务系统都是基于贫血模型的MVC三层架构来开发的，甚至这种开发模式已经成为标准的Web项目的开发模式，
不过这其实是一种面向过程的编程风格。BO只包含数据，不包含具体的业务逻辑，业务逻辑集中在Service类中，轻BO重Service。
基于充血模型的DDD架构： 基于充血模型的DDD开发模式也是按照MVC三层架构分层的，与基于贫血模型的开发模式主要区别在Service层。
Domain就相当于贫血模型中的BO，不过Domain既包含数据，也包含业务逻辑，而Service类就变的非常单薄，轻Service重Domain。




