“比设计模式更重要的是设计原则” OOD原则如下


6大设计原则
1...开闭原则（Open Close Principle）

【对扩展开放，对修改关闭】。在程序需要进行拓展的时候，不能去修改原有的代码，实现一个热插拔的效果。所以一句话概括就是：为了使程序的扩展性好，易于维护和升级。想要达到这样的效果，我们需要使用接口和抽象类。

2...里氏代换原则（Liskov Substitution Principle）

任何基类可能出现的地方，子类一定可以出现。里氏代换原则是对“开-闭”原则的补充。实现“开-闭”原则的关键步骤就是抽象化。而基类与子类的继承关系就是抽象化的具体实现，所以里氏代换原则是对实现抽象化的具体步骤的规范。

3...依赖倒转原则（Dependence Inversion Principle）

这个是开闭原则的基础，具体内容：针对接口编程，依赖于抽象而不依赖具体。

4.接口隔离原则（Interface Segregation Principle）

使用多个隔离的接口，比使用单个接口更好。还是一个降低类之间的耦合度的意思，从这儿我们看出，其实设计模式就是一个软件的设计思想，从大型软件架构出发，为了升级和维护方便。所以上文中多次出现：降低依赖，降低耦合。

5.迪米特法则（最少知道原则）（Demeter Principle）

为什么最少知道原则，就是说：一个实体应当尽量少的和其他实体之间发生相互作用，使得系统功能模块相对独立。

6.合成复用原则（Composite Reuse Principle）