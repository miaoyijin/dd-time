一：in 和 exits 区别：

假设子查询结果大小为M，外部表的大小为N

in执行原理：对于in来说，他是先执行子查询然后得到子查询的结果集，再用子查询的结果去匹配外部表
exist执行原理：对于exists来说，他是执行外表的遍历操作（不一定是全表扫描也可能是索引扫描，但是差别不是很大）

时间复杂度    in:  O（M*logN）|exits: O（N*logM）

结论：当外表大，内部数据集小，适合适使用in； 当外表小，内部数据集大，适合使用exists

二： not in 和 not exist 区别

 not exists 和 not in 来说毫不犹豫的使用 not exists ，因为not in 不会使用索引。


三： in查询可以使用inner join 替代，因为inner join 可以选择驱动表并且采用Block Nested-Loop Join 方式查询数据
【EXPLAIN 查看执行计划结果的 Extra 列中，如果包含 Using Temporary 就表示会用到临时表；当然了，如果临时表中需要存储的数据量超过了上限（ tmp-table-size 或 max-heap-table-size 中取其大者），这时候就需要生成基于磁盘的临时表了】



四：什么是半连接
半连接主要场景：检查一个结果集（外表）的记录是否在另外一个结果集（字表）中存在匹配记录，半连接仅关注”子表是否存在匹配记录”，而并不考虑”子表存在多少条匹配记录”，半连接的返回结果集仅使用外表的数据集，查询语句中IN或EXISTS语句常使用半连接来处理。
